# Deployment meetings
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meetings
  namespace: egs-docmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: meetings
  template:
    metadata:
      labels:
        app: meetings
    spec:
      containers:
      - name: meetings
        image: registry.deti/egs-docmanager/meetings:v6
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8005
        env:
        - name: DATABASE_URL
          value: "postgresql://postgres:example@meetings-db:5432/postgres"

# Service meetings
---
apiVersion: v1
kind: Service
metadata:
  name: meetings
  namespace: egs-docmanager
spec:
  ports:
    - port: 8005
      targetPort: 8005
  selector:
    app: meetings

# Deployment meetings db 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meetings-db
  namespace: egs-docmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: meetings-db
  template:
    metadata:
      labels:
        app: meetings-db
    spec:
      containers:
      - image: postgres
        name: meetings-db
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
          - name: postgres-persistent-storage
            mountPath: /var/lib/postgres
        env:
        - name: POSTGRES_PASSWORD
          value: example
      volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: meetings-pv-claim

#  Service meetings DB
---
apiVersion: v1
kind: Service
metadata:
  name: meetings-db
  namespace: egs-docmanager
spec:
  ports:
    - port: 5432
      targetPort: 5432  
  selector:
    app: meetings-db
  type: NodePort


# Deployment for Adminer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer
  namespace: egs-docmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
    spec:
      containers:
      - name: adminer
        image: adminer
        ports:
        - containerPort: 8005
          name: adminer

# Service for Adminer
---
apiVersion: v1
kind: Service
metadata:
  name: adminer
  namespace: egs-docmanager
spec:
  ports:
    - port: 8005
      targetPort: 8005
  selector:
    app: adminer


# Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: meetings-api-k3s
  namespace: egs-docmanager
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
  - host: grupo7-egs-deti.ua.pt
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: meetings
            port: 
              number: 8005
