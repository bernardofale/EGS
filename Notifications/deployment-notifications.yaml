# notification deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification
  namespace: egs-docmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification
  template:
    metadata:
      labels:
        app: notification
    spec:
      containers:
      - name: notification
        image: registry.deti/egs-docmanager/notifications:1.3
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8000
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        - name: MAIL_USERNAME
          value: "egs.2024@outlook.com"
        - name: MAIL_PASSWORD
          value: "Egs_2024Notify!"
        - name: MAIL_FROM
          value: "egs.2024@outlook.com"
        - name: MAIL_PORT
          value: "587"
        - name: MAIL_SERVER
          value: "smtp-mail.outlook.com"
        - name: MAIL_FROM_NAME
          value: "Notify"
        - name: TOKEN
          value: "6942311486:AAHzFqxWOuM7eeRSs_K40Ih0S0XtHVfL01s"
        - name: DATABASE_URL
          value: "postgresql://postgres:my_password@postgres-notification-db:5432/notification-db"


# notification Service
---
apiVersion: v1
kind: Service
metadata:
  name: notification
  namespace: egs-docmanager
spec:
  ports:
    - port: 8000 
      targetPort: 8000 
  selector:
    app: notification

# cronjob deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cronjob
  namespace: egs-docmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cronjob
  template:
    metadata:
      labels:
        app: cronjob
    spec:
      containers:
      - name: cronjob
        image: registry.deti/egs-docmanager/notifications.cronjob:1.2
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8001
        env:
        - name: DATABASE_URL
          value: "postgresql://postgres:my_password@postgres-notification-db:5432/postgres-notification-db"

# cronjob Service
---
apiVersion: v1
kind: Service
metadata:
  name: cronjob
  namespace: egs-docmanager
spec:
  ports:
    - port: 8001
      targetPort: 8000
  selector:
    app: cronjob
  
# postgres-notification-db  Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-notification-db
  namespace: egs-docmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-notification-db
  template:
    metadata:
      labels:
        app: postgres-notification-db
    spec:
      containers:
      - image: postgres:latest
        name: postgres-notification-db
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
          - name: postgres-persistent-storage
            mountPath: /var/lib/postgres
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "my_password"
        - name: POSTGRES_DB
          value: "notification-db"
      volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: notifications-pv-claim

# postgres-notification-db  Service
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-notification-db
  namespace: egs-docmanager
spec:
  ports:
    - port: 5432
      targetPort: 5432  
  selector:
    app: postgres-notification-db
  type: NodePort

# Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: notification-api-k3s
  namespace: egs-docmanager
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
  - host: grupo7-egs-deti.ua.pt
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: notification
            port: 
              number: 8010